<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Disque extends \Entities\Disque implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getDisId()
    {
        if ($this->__isInitialized__ === false) {
            return $this->_identifier["disId"];
        }
        $this->__load();
        return parent::getDisId();
    }

    public function setDisLibelle($disLibelle)
    {
        $this->__load();
        return parent::setDisLibelle($disLibelle);
    }

    public function getDisLibelle()
    {
        $this->__load();
        return parent::getDisLibelle();
    }

    public function setDisFormat($disFormat)
    {
        $this->__load();
        return parent::setDisFormat($disFormat);
    }

    public function getDisFormat()
    {
        $this->__load();
        return parent::getDisFormat();
    }

    public function setDisDateAjout($disDateAjout)
    {
        $this->__load();
        return parent::setDisDateAjout($disDateAjout);
    }

    public function getDisDateAjout()
    {
        $this->__load();
        return parent::getDisDateAjout();
    }

    public function setDisEnvoiOk($disEnvoiOk)
    {
        $this->__load();
        return parent::setDisEnvoiOk($disEnvoiOk);
    }

    public function getDisEnvoiOk()
    {
        $this->__load();
        return parent::getDisEnvoiOk();
    }

    public function setDisDisponible($disDisponible)
    {
        $this->__load();
        return parent::setDisDisponible($disDisponible);
    }

    public function getDisDisponible()
    {
        $this->__load();
        return parent::getDisDisponible();
    }

    public function setDif(\Entities\Diffuseur $dif = NULL)
    {
        $this->__load();
        return parent::setDif($dif);
    }

    public function getDif()
    {
        $this->__load();
        return parent::getDif();
    }

    public function setEmb(\Entities\Embenevole $emb = NULL)
    {
        $this->__load();
        return parent::setEmb($emb);
    }

    public function getEmb()
    {
        $this->__load();
        return parent::getEmb();
    }

    public function setEmp(\Entities\Emplacement $emp = NULL)
    {
        $this->__load();
        return parent::setEmp($emp);
    }

    public function getEmp()
    {
        $this->__load();
        return parent::getEmp();
    }

    public function setPerArtiste(\Entities\Personne $perArtiste = NULL)
    {
        $this->__load();
        return parent::setPerArtiste($perArtiste);
    }

    public function getPerArtiste()
    {
        $this->__load();
        return parent::getPerArtiste();
    }

    public function setUtiEcoute(\Entities\Utilisateur $utiEcoute = NULL)
    {
        $this->__load();
        return parent::setUtiEcoute($utiEcoute);
    }

    public function getUtiEcoute()
    {
        $this->__load();
        return parent::getUtiEcoute();
    }

    public function addPer(\Entities\Utilisateur $per)
    {
        $this->__load();
        return parent::addPer($per);
    }

    public function removePer(\Entities\Utilisateur $per)
    {
        $this->__load();
        return parent::removePer($per);
    }

    public function getPer()
    {
        $this->__load();
        return parent::getPer();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'disId', 'disLibelle', 'disFormat', 'disDateAjout', 'disEnvoiOk', 'disDisponible', 'dif', 'emb', 'emp', 'perArtiste', 'utiEcoute', 'per');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}